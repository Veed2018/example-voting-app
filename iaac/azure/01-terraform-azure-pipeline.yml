# Azure Pipeline that run basic continuous integration on a Terraform project

# Will trigger the pipeline when code is pushed to all branches, including the iaac/azure path
trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - 'iaac/azure/*'

variables:
  serviceConnection: 'VoteApp_ARM'
  # Terraform backend settings (only secret, the other in provider.tf)
  tf_state_scrt: $ # Terrafom Secret
  # Terraform settings
  tf_wkdir: '$(System.DefaultWorkingDirectory)/iaac/azure'
  tf_version: '1.3.3'
  tf_mode: 'create' # create|destroy - folosit pt a distruge toate infra (development)

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: TerraformContinuousIntegration
    displayName: Terraform Module - CI
    jobs:
    - job: TerraformContinuousIntegrationJob
      displayName: TerraformContinuousIntegration - CI Job
      steps:
      # Step 1: run the Checkov Static Code Analysis
      - bash: $(tf_wkdir)/checkov.sh $(tf_wkdir)
        displayName: Checkov Static Code Analysis
      # Step 2: install Terraform on the Azure Pipelines agent
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: $(tf_version)
      # Step 3: run Terraform init to initialize the workspace
      - task: TerraformCLI@0
        displayName: 'Run terraform init'
        inputs:
          command: init
          workingDirectory: $(tf_wkdir)
          backendServiceArm: $(serviceConnection)
      # Step 4: run Terraform validate to validate HCL syntax
      - task: TerraformCLI@0
        displayName: 'Run terraform validate'
        inputs:
          command: validate
          workingDirectory: $(tf_wkdir)
      # Step 5: run Terraform plan to validate HCL syntax
      - task: TerraformCLI@0
        displayName: 'Run terraform plan'
        inputs:
          command: plan
          workingDirectory: $(tf_wkdir)
          environmentServiceName: $(serviceConnection)
          allowTelemetryCollection: false
          publishPlanResults: 'PlanResults'